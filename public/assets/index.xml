<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assets on Qml Book</title>
    <link>https://mirrors.cqu.edu.cn/qmlbook/assets/</link>
    <description>Recent content in Assets on Qml Book</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://mirrors.cqu.edu.cn/qmlbook/assets/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://mirrors.cqu.edu.cn/qmlbook/assets/preface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mirrors.cqu.edu.cn/qmlbook/assets/preface/</guid>
      <description>序 #  历史
Qt4自2005年发布至今，已为成千上万的应用程序，甚至包括台式机操作系统和移动操作系统提供了坚实的基础。计算机用户的使用模式近年来发生了变化，用户正在从传统台式机转向笔记本电脑或智能手机。传统台式机设备被越来越多的触摸屏设备取代，台式机的用户体验模型也在跟随改变。在过去，Window UI占据了我们的世界，但现在我们会花更多的时间在其它的UI语言上用于适配移动端的用户体验。
Qt4旨在满足开发者可以在主流平台桌面系统上有一套表现一致的用户界面窗口。Qt的用户如今面临的问题也在改变，他们需要提供可触摸交互的用户界面以满足软件客户的用户界面需求，并在主流的桌面系统和移动系统上实现这些界面。Qt4.7开始引进Qt Quick技术，该技术让使用者用简单的元素创建一套用户界面组件，通过组合这些用户界面组件来完成软件用户的界面需求。
1.1.1 Qt5优势 #  Qt5是Qt4的更新升级，Qt4版本至Qt4.8已经演进了7年，是时候让这个不可思议的工具更加强大了。
Qt5主要优势如下：
 图形处理：Qt Quick2是基于OpenGL(ES)场景实现，重新实现了图形堆栈，并让开发者可以更方便地实现新的图形效果。 生产效率：QML和JavaScript语言是创建用户界面的主要手段，后端则由C++来驱动。JavaScript与C++的分割让前端开发人员可以快速迭代并专注于创建漂亮的用户界面，而后端的C++开发人员则专注于软件的稳定性、高性能和扩展能力。 可移植性：基于Qt跨平台性质，能更方便地将Qt移植到更多的平台上。Qt5提出了基础模块和附加模块的概念，操作系统开发者只需要专注于基础模块的移植就能使Qt正常运行。 开源化：Qt是由Qt-Porject(qt-project.org)主持的开源项目，它的开发由Qt社区驱动的。  </description>
    </item>
    
  </channel>
</rss>
